name: Update Ticker (täglich)

on:
  schedule:
    - cron: "0 4 * * *"   # ca. 06:00 Europe/Berlin
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: ticker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Run update script (no npm)
        env:
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
        run: |
          node -v
          test -f scripts/update_ticker.mjs || (echo "FEHLT: scripts/update_ticker.mjs" && exit 1)
          node scripts/update_ticker.mjs
          echo "----- ticker.json preview -----"
          head -n 80 ticker.json || (echo "ticker.json NICHT erzeugt" && exit 1)
          echo "--------------------------------"

      # >>> Fix: erst committen, dann rebase & push
      - name: Commit, rebase & push
        run: |
          set -e
          git config user.name  "github-actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Änderungen aufnehmen (wenn keine, fällt der Commit einfach aus)
          git add ticker.json || true
          git commit -m "chore: daily ticker update" || echo "Keine Änderungen zu committen"

          # Neueste main holen und Commit davor setzen
          git fetch origin main
          git pull --rebase origin main || true

          # Pushen (non-ff ist jetzt ausgeschlossen)
          git push origin HEAD:main
